/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Mysql;

import static Mysql.Global.conn;
import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author kmis
 */
public class frmLogin extends javax.swing.JFrame {

    /**
     *
     */
    /**
     * Creates new form FormMain
     */
    public frmLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_login = new javax.swing.JButton();
        txt_username = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        btn_login1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_login.setText("LoginPS");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        txt_username.setText("'=' 'or'");

        btn_login1.setText("Login");
        btn_login1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_login1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_username)
                            .addComponent(txt_password, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_login1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btn_login1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Login button sample using prepared statement
     * @param evt 
     */
    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        // TODO add your handling code here:
        Global.connOpen(frmLogin.class.getName());
        try {
            if (conn == null) {
                JOptionPane.showMessageDialog(null, "Koneksi ke database gagal", "Error Message", JOptionPane.ERROR_MESSAGE);
            } else {
//                checkUserS(txt_username.getText(),String.valueOf(txt_password.getPassword()));
                char[] password = txt_password.getPassword();
                String str_password = String.valueOf(password);
                String username = txt_username.getText();
                if (checkUserPS(username, str_password) != null) {
                    Global.gb_userId = checkUserPS(username, str_password);
                    frmMain fu = new frmMain();
                    fu.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Username dan Password ditolak Bro..!", "Error Message", JOptionPane.ERROR_MESSAGE);
                }
            }
            conn.close();
        } catch (Exception e) {
            Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btn_loginActionPerformed

    /**
     * Login button sample without prepared statement
     * @param evt 
     */
    private void btn_login1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_login1ActionPerformed
        // TODO add your handling code here:
        char[] password = txt_password.getPassword();
        String str_password = String.valueOf(password);
        String username = txt_username.getText();
        try {
            Global.connOpen(frmLogin.class.getName());
            checkUserS(username, str_password);

            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_login1ActionPerformed

    /**
     * Function to check user credentials utilizing JDBC statement
     *
     * @param username inputted username
     * @param password hashed password
     */
    private void checkUserS(String username, String password) {
        try {
            String sql = "SELECT * FROM users WHERE username = '" + username + "' AND password = PASSWORD('" + password + "')";            
            ResultSet rs = conn.createStatement().executeQuery(sql);
            if (rs.next()) {
                frmMain fu = new frmMain();
                fu.setLocationRelativeTo(null);
                fu.setVisible(true);
                this.dispose();

            } else {
                JOptionPane.showMessageDialog(null, "Username dan Password ditolak Bro..!", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException | HeadlessException e) {
            Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * Function to check user credentials utilizing JDBC prepared statement
     *
     * @param username inputted username
     * @param password hashed password
     * @return currently logged in user id or null if user doesn't exist
     */
    private Integer checkUserPS(String username, String password) {
        try {
            String sql = "SELECT * FROM users WHERE username = ? AND password = PASSWORD(?)";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1, username);
            preparedStatement.setString(2, password);
            ResultSet rs = preparedStatement.executeQuery();

            if (rs.next()) {
                return Integer.parseInt(rs.getString("id"));

            } else {
                return null;
            }

        } catch (SQLException | HeadlessException e) {
            Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, e);
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_login;
    private javax.swing.JButton btn_login1;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
